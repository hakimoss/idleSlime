package com.hakim;

import java.awt.event.ActionListener;

import javax.swing.JFrame;
import javax.swing.SwingUtilities;
import javax.swing.Timer;

public class Main {
	
	public static Scene scene;
	
	private static JFrame frame;
	
	//private static LoadingScreen ld;
	
	public static boolean loading = false;
	

	public static void main(String[] args) {

		
		
		frame=new JFrame();
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.setSize(800, 600);
		frame.setLocationRelativeTo(null);
		frame.setResizable(false);
		frame.setAlwaysOnTop(true);
		
		
		scene=new Scene();
		frame.setContentPane(scene);
		
		
		
		
		
		//frame.setContentPane(ld);
		
			
		
		frame.setVisible(true);

		
		
		
	}
	
	@SuppressWarnings("static-access")
	public static void changeScreentoLoading() {
		LoadingScreen ld = new LoadingScreen();
		ld.setlayout(null);
		Thread t = new Thread(){
	        public void run(){
	        
	        	
	    		
	            for(int i = 0 ; i <= 100 ; i++){
	                final int percent = i;
	                SwingUtilities.invokeLater(new Runnable() {
	                    public void run() {
	                        ld.ps.setValue(percent);
 
	                        if(percent == 100) {
	                        	changeScreentoScene();
	                        }
	                    }
	                  });

	                try {
	                    Thread.sleep(10);
	                } catch (InterruptedException e) {}
	            }
	          
	        }
	        
	    };

	    frame.getContentPane().removeAll();
		frame.getContentPane().invalidate();
	    frame.setContentPane(ld);
		frame.revalidate();
		frame.repaint();
		t.start();
		
		/*
		try {
			Thread.sleep(100);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		frame.getContentPane().removeAll();
		frame.getContentPane().invalidate();
		
		frame.setContentPane(scene);
		frame.revalidate();
		frame.repaint();
		*/
		
	
	
		
	}
	
	public static void changeScreentoScene() {
		//frame.getContentPane().removeAll();
		frame.getContentPane().removeAll();
		frame.getContentPane().invalidate();
		
		frame.setContentPane(scene);
		frame.revalidate();
		frame.repaint();

	}
	
	

}
